[tox]
envlist =
    black
    blackcheck
    pylint
    validate_pyproject
    integration

[base]
setenv =
    PIP_DISABLE_PIP_VERSION_CHECK = 1
allowlist_externals =
    /bin/sh
commands_pre =
    # self-build with self-hosted backend and self-install for bootstrap test
    /bin/sh -c 'export PYTHONPATH={toxinidir}{/}src ; python -m pyproject_installer build && python -m pyproject_installer install'
skip_install = True

[testenv]
# install deps via pip
deps =
    pytest
    pytest-mock
    coverage: pytest-cov
skip_install = {[base]skip_install}

description = run test suite under {basepython}
setenv =
    {[base]setenv}
    coverage: _TOX_COVERAGE_CONFIG={toxinidir}{/}pyproject.toml
    coverage: _TOX_COVERAGE_OPTIONS=--cov --cov-config={env:_TOX_COVERAGE_CONFIG:}
    coverage: COVERAGE_PROCESS_START={env:_TOX_COVERAGE_CONFIG:}

allowlist_externals =
    py3: {[base]allowlist_externals}
commands_pre =
    py3: {[base]commands_pre}
commands =
    pytest \
        -vra {env:_TOX_COVERAGE_OPTIONS:} \
        tests/unit

[testenv:integration]
# install deps with pip
deps =
    pytest

description = integration tests
allowlist_externals =
    {[base]allowlist_externals}
commands_pre =
    {[base]commands_pre}
commands =
    pytest -vra tests/integration

[testenv:black]
description = fix formatting with black
deps =
    black
commands = python -m black \
           -v \
           {toxinidir}

[testenv:blackcheck]
description = check the code base with black
deps =
    black
commands = python -m black \
           -v \
           --check \
           --diff \
           {toxinidir}

[testenv:pylint]
description = check the code base with pylint
deps =
    pylint
    pytest
commands = python -m pylint \
           -v \
           --rcfile={toxinidir}/pyproject.toml \
           {toxinidir}

[testenv:validate_pyproject]
description = validate pyproject.toml (PEP517/518/621)
deps =
    validate-pyproject[all]
commands = python -m validate_pyproject -vv pyproject.toml
